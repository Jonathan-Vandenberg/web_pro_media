type Query {
  customer(id: ID!): Customer
  getAllCustomers: [Customer!]!
  getAllCards: [Card!]!
  getMaps: [Map!]!
  getPhotoGalleries: [PhotoGallery!]!
  getProject(id: ID!): Project
  timeline(id: ID!): Timeline
  clarify(id: ID!): Clarify
  functionalityTimeline(id: ID!): FunctionalityTimeline
  layout(id: ID!): Layout
  tools(id: ID!): Tools
  implementFunctionality(id: ID!): ImplementFunctionality
  implementDesign(id: ID!): ImplementDesign
  review(id: ID!): Review
  alterations(id: ID!): Alterations
  testing(id: ID!): Testing
  deploy(id: ID!): Deploy
  functionality(id: ID!): Functionality
}

type Mutation {
  createCustomer(input: CreateCustomerInput!): Customer
  updateCustomer(input: UpdateCustomerInput!): Customer
  deleteCustomer(id: ID!): Customer

  addProject(input: AddProjectInput!): Project
  deleteProject(id: ID!): Project

  addFunctionality(input: FunctionalityInput!): Functionality

  addMap(input: MapInput!): Map
  deleteMap(id: ID!): Map

  addPhotoGallery(input: PhotoGalleryInput!): PhotoGallery
  deletePhotoGallery(id: ID!): PhotoGallery

  addBlog(input: BlogInput!): Blog
  deleteBlog(id: ID!): Blog
  updateBlog(input: BlogInput!): Blog

  addTimeline(input: TimelineInput!): Timeline

  updateClarify(input: ClarifyInput!): Clarify
  updateFunctionalityTimeline(
    input: FunctionalityTimelineInput!
  ): FunctionalityTimeline
  updateLayout(input: LayoutInput!): Layout
  updateTools(input: ToolsInput!): Tools
  updateImplementFunctionality(
    input: ImplementFunctionalityInput!
  ): ImplementFunctionality
  updateImplementDesign(input: ImplementDesignInput!): ImplementDesign
  updateReview(input: ReviewInput!): Review
  updateAlterations(input: AlterationsInput!): Alterations
  updateTesting(input: TestingInput!): Testing
  updateDeploy(input: DeployInput!): Deploy
}

type Customer {
  id: ID!
  name: String
  email: String
  phone: String
  project: Project
  functionality: Functionality
  timeline: Timeline
}

type Project {
  id: ID!
  projectName: String!
  customerId: ID!
  status: Status!
  startDate: String
  endDate: String
  websiteType: WebsiteType!
  websiteCategory: WebsiteCategory!
  image: String
  map: Map
  photoGallery: PhotoGallery
  blog: Blog
}

type Timeline {
  id: String!
  customerId: String!
  clarify: Clarify
  functionalityTimeline: FunctionalityTimeline
  layout: Layout
  tools: Tools
  implementFunctionality: ImplementFunctionality
  implementDesign: ImplementDesign
  review: Review
  alterations: Alterations
  testing: Testing
  deploy: Deploy
}

type Clarify {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type FunctionalityTimeline {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type Layout {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type Tools {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type ImplementFunctionality {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type ImplementDesign {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type Review {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type Alterations {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type Testing {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type Deploy {
  id: ID!
  timelineId: ID!
  name: String!
  status: Status!
}

type Card {
  projectName: String!
  status: String!
  image: String
  customerId: ID
}

type Functionality {
  id: ID!
  customerIdRequire: ID!
  photoGalleryRequire: Boolean
  calenderRequire: Boolean!
  chatPopupRequire: Boolean!
  contactFormRequire: Boolean!
  emailMarketingRequire: Boolean!
  productCatalogRequire: Boolean!
  productSearchRequire: Boolean!
  videoGalleryRequire: Boolean!
  blogRequire: Boolean!
  blogCommentsRequire: Boolean!
  blogPostsRequire: Boolean!
  mapRequire: Boolean!
  apiRequire: Boolean!
  otherRequire: String
}

type Map {
  projectId: ID!
  id: ID
  required: Boolean!
  name: String
  status: Status
  price: Int
  notes: String
  startDate: String
  endDate: String
}

type PhotoGallery {
  projectId: ID!
  id: ID
  required: Boolean!
  name: String
  status: Status
  price: Int
  notes: String
  startDate: String
  endDate: String
}

type Blog {
  id: ID
  projecId: ID!
  required: Boolean!
  name: String
  status: Status
  price: Int
  notes: String
  startDate: String
  endDate: String
  commentSection: Boolean
  socialSharing: Boolean
}

enum Status {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

enum WebsiteType {
  ECOMMERCE_WEBSITE
  BUSINESS_WEBSITE
  BLOG_WEBSITE
  PORTFOLIO_WEBSITE
  EVENT_WEBSITE
  PERSONAL_WEBSITE
  MEMBERSHIP_WEBSITE
  NONPROFIT_WEBSITE
  INFORMATIONAL_WEBSITE
  ONLINE_FORUM
  OTHER
}

enum WebsiteCategory {
  AUTOMOTIVE
  BUSINESS_SUPPORT_AND_SUPPLIES
  COMPUTERS_AND_ELECTRONICS
  CONTRUCTION_AND_CONTRACTING
  EDUCATION
  ENTERTAINMENT
  FOOD_AND_DINING
  HEALTH_AND_MEDICINE
  HOME_AND_GARDEN
  LEGAl_AND_FINANCIAL
  MANUFACTURING_WHOLESALE_AND_DISTRIBUTION
  MERCHANTS_AND_RETAIL
  PERSONAL_CARE_AND_SERVICES
  REAL_ESTATE
  TRAVEL_AND_TRANSPORTATION
  OTHER
}

input TimelineInput {
  id: String!
  customerId: String!
}

input ClarifyInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input FunctionalityTimelineInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input LayoutInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input ToolsInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input ImplementFunctionalityInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input ImplementDesignInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input ReviewInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input AlterationsInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input TestingInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input DeployInput {
  id: ID
  timelineId: ID!
  name: String!
  status: Status
}

input BlogInput {
  projectId: String!
  id: String!
  required: Boolean!
  status: Status
  price: Int
  notes: String
  startDate: String
  endDate: String
  commentSection: Boolean
  socialSharing: Boolean
}

input PhotoGalleryInput {
  projectId: String!
  id: String!
  required: Boolean!
  status: Status
  price: Int
  notes: String
  startDate: String
  endDate: String
}

input MapInput {
  id: String!
  projectId: ID!
  required: Boolean!
  status: Status
  price: Int
  notes: String
  startDate: String
  endDate: String
}

input FunctionalityInput {
  id: String!
  customerIdRequire: String!
  calenderRequire: Boolean!
  chatPopupRequire: Boolean!
  contactFormRequire: Boolean!
  emailMarketingRequire: Boolean!
  productCatalogRequire: Boolean!
  productSearchRequire: Boolean!
  videoGalleryRequire: Boolean!
  apiRequire: Boolean!
  blogRequire: Boolean!
  photoGalleryRequire: Boolean!
  mapRequire: Boolean!
  blogCommentsRequire: Boolean!
  blogPostsRequire: Boolean!
  otherRequire: String
}

input UpdateCustomerInput {
  name: String!
  email: String!
  phone: String!
  id: String!
}

input CreateCustomerInput {
  name: String!
  email: String!
  phone: String!
  id: String!
}

input AddProjectInput {
  projectName: String!
  customerId: String!
  id: String!
  status: Status
  startDate: String
  endDate: String
  websiteType: WebsiteType!
  websiteCategory: WebsiteCategory!
  image: String
}
